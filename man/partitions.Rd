% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/panes.R
\name{partitions}
\alias{partitions}
\title{Distribute events into time intervals.}
\usage{
partitions(
  date,
  window = number_line(0, Inf),
  windows_total = 1,
  separate = FALSE,
  sn = NULL,
  strata = NULL,
  data_links = "ANY",
  custom_sort = NULL,
  group_stats = FALSE,
  data_source = NULL,
  by = NULL,
  length.out = NULL,
  fill = TRUE,
  schema = "none"
)
}
\arguments{
\item{date}{Event date (\code{date}, \code{datetime} or \code{numeric}) or period (\code{\link{number_line}}).}

\item{window}{Numeric or time intervals. Supplied as \code{number_line} objects.}

\item{windows_total}{Minimum number of matched \code{windows} required for pane. See \code{details}}

\item{separate}{If \code{TRUE}, events matched to different \code{windows} are not linked.}

\item{sn}{Unique numerical record identifier. Useful for creating familiar pane identifiers.}

\item{strata}{Subsets of the dataset. Panes are created separately for each \code{strata}. Assigning \code{NA} to \code{strata} will skip that record.}

\item{data_links}{A set of \code{data_sources} required in a \code{pane}. A \code{pane} without records from these \code{data_sources} are skipped or unlinked. See \code{Details}.}

\item{custom_sort}{Preferred order for selecting \code{"index"} events.}

\item{group_stats}{If \code{TRUE} (default), returns group-specific information like record counts. See \code{Value}.}

\item{data_source}{Unique data source identifier. Includes a list of data sources of for each record in a \code{panes}.}

\item{schema}{Return a schema of the \code{pane} object. Options are; \code{"none"} (default), \code{"by_pane"}, \code{"by_strata"} or \code{"by_ALL"}.}
}
\value{


\code{\link[=pane-class]{pane}} or \code{list} (\code{\link[=pane-class]{pane}} and \code{ggplot}) object
}
\description{
Distribute events into groups defined by time or numerical boundaries.
Records in each group are assigned a unique identifier with relevant group-level data.
}
\details{
Each group is referred to as a pane. A pane consists of events within a specific time or numerical intervals (\code{window}).

Each \code{window} must cover a separate interval. Overlapping \code{windows} are merged before events are distributed into panes.
Events that occur over two \code{windows} are assigned to the last one listed.

Alternatively, you can create \code{windows} by splitting a period into equal parts (\code{length.out}), or into a sequence of intervals with fixed widths (\code{by}).

By default, the earliest event is taken as the \code{"Index"} event of the pane.
An alternative can be chosen with \code{custom_sort}.

\bold{\code{partitions()}} will categorise records into 3 types;
\itemize{
\item \code{"Index"} - Index event/record of the pane.
\item \code{"Duplicate_I"} - Duplicate of the \code{"Index"} record.
\item \code{"Skipped"} - Records that are not assigned to a pane.
}

\code{data_links} must be a \code{list} of \code{atomic} vectors, with every element named \code{"l"} (links) or \code{"g"} (groups).

\itemize{
\item if named \code{"l"}, only \code{panes} with records from every listed \code{data_source} will be retained.
\item if named \code{"g"}, only \code{panes} with records from any listed \code{data_source} will be retained.
}

See \code{vignette("partitions")} for more information.
}
\examples{
events <- c(30, 2, 11, 10, 100)
windows <- number_line(c(1, 9, 25), c(3, 12, 35))

events
partitions(date = events, length.out = 3, separate = TRUE, schema = "by_ALL")
partitions(date = events, by = 10, separate = TRUE, schema = "by_ALL")
partitions(date = events, window = windows, separate = TRUE, schema = "by_ALL")
partitions(date = events, window = windows, separate = FALSE, schema = "by_ALL")
partitions(date = events, window = windows, separate = FALSE, schema = "by_ALL", windows_total = 4)

}
\seealso{
\code{\link[=pane-class]{pane}}, \code{\link{number_line_sequence}}, \code{\link{episodes}}, \code{\link{links}}, \code{\link{overlaps}} and \code{\link{number_line}}
}
