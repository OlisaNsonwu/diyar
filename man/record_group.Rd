% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/record_group.R
\name{record_group}
\alias{record_group}
\title{Multi-staged deterministic record linkage}
\usage{
record_group(df, sn, criteria, sub_criteria = NULL, data_source = NULL,
  group_stats = FALSE, display = TRUE)
}
\arguments{
\item{df}{Dataframe. One or more datasets appened together.}

\item{sn}{Unique \code{numeric} record indentifier.}

\item{criteria}{Column names of the attributes to match. Records with matching values in these columns are grouped together.}

\item{sub_criteria}{Matching sub-criteria. Additional matching conditions for each stage (\code{criteria}).}

\item{data_source}{Unique dataset indentifier. Useful when dataframe contains data from multiple datasets.}

\item{group_stats}{If \code{TRUE}, output will include additional columns with useful stats for each record group.}

\item{display}{If \code{TRUE}, status messages are not printed on screen.}
}
\value{
Dataframe

\itemize{
\item \code{sn} - unique record identifier as provided
\item \code{pid} - unique group indentifier
\item \code{pid_cri} - matching criteria for each record in the group
\item \code{pid_dataset} - list of datasets in each group
\item \code{pid_total} - number of records in each group
}
}
\description{
This function assigns a unique group identifier for matching records from one or more datasets.
}
\details{
Record grouping occurs in stages as listed in \code{criteria}. A match at each stage is considered more certain than those in subsequent stages.
Therefore, \code{criteria} should be listed in order of decreasing certainty. \code{sub_criteria} can be used to force additonal matching conditions
at each stage. If \code{sub_criteria} is not \code{NULL}, only records with matching \code{criteria} and \code{sub_criteria} values are grouped together.
If a record has missing values for any \code{criteria}, it's skipped at that stage, and another attempt is made at the next stage.
If all \code{criteria} values are missing, that record is assigned a unique group ID. When a \code{data_source} identifier is included,
\code{pid_dataset} is included in the output. This shows the datasets included in each group.

Record are matched in two ways; exact match - the equivalent of \code{==} or range matching.
Range matching is when 2 or more record match on a range of values. For example, matching 2 records if the age value of one falls within 5 years before or after another.
To do this, create the range of values as a \code{\link{number_line}} object and supply that to the \code{sub_criteria} arguement
}
\examples{

library(dplyr)
library(tidyr)

# One stage record grouping
 df <- tibble(
   r_id = c(1:5),
   forename = c("Obinna","James","Ojay","James","Obinna"),
   stringsAsFactors = FALSE
 )

 bind_cols(df, record_group(df, r_id, forename))

 # To handle missing or unknown data, recode missing or unknown values to NA or "".
 # These are excluded from record grouping at the relevant stage

 df \%>\%
   mutate(forename = ifelse(r_id \%in\% c(1,4), NA, forename)) \%>\%
   bind_cols(record_group(., r_id, forename))

 # Two or more stages of record grouping
 # Criteria should be listed in decreasing order of certainty
data_3 <- tibble(
  r_id = c(1:7),
  forename = c("James",NA,"Jamey","","Derrick","Darrack","Christie"),
  surname = c("Green","Anderson","Green",NA,"Anderson","Anderson","Green"),
  sex = c("M","M","M","F","M","M","F"),
  dataset = c("Staff list","Staff list", "Pay slips","Pay slips", "Staff list","Pay slips","Staff list"),
  stringsAsFactors = FALSE
)

bind_cols(data_3, record_group(data_3,r_id, c(forename, surname), data_source = sex, display = FALSE))

# Add sex to the second stage to be more certain
data_3 \%>\%
  unite(cri_2, c(surname, sex)) \%>\%
  bind_cols(record_group(., r_id, c(forename, cri_2), data_source = dataset, display = FALSE))

# Using sub-criteria
data_4 <- tibble(
  r_id = c(1:7),
  staff_id = c(NA,NA,NA,NA,NA,2,2),
  age = rep(30,7),
  initials = c("G.D.","B.G.","X.P.","X.P.",NA,"G.D.","G.D."),
  hair_colour = c("Brown","Teal",NA,"Green","Green","Dark brown","Brown"),
  branch_office = c("Republic of Ghana","France",NA,NA,"France","Ghana","Republic of Ghana"),
  ds_1 = c("A","A","A","B","A","A","B"),
  ds_2 = c(3,1,1,1,1,1,2),
  stringsAsFactors = FALSE
)

bind_cols(data_4, record_group(data_4,r_id, c(staff_id, age), list(s2a=c("initials","hair_colour","branch_office")), data_source = ds_1))

bind_cols(data_4, record_group(data_4,r_id, c(staff_id, age), list(s2a=c("initials","hair_colour","branch_office")), data_source = c(ds_1, ds_2)))

}
\seealso{
\code{\link{episode_group}}

\code{\link{number_line}}
}
